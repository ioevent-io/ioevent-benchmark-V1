version: "3.5"

services:
  # See:
  # https://hub.docker.com/r/bitnami/zookeeper
  zookeeper:
    image: "bitnami/zookeeper:latest"
    container_name: "zookeeper"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  # See:
  # https://hub.docker.com/r/bitnami/kafka
  kafka:
    image: bitnami/kafka:3
    container_name: "kafka"
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: '0'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_NUM_PARTITIONS: '12'
      KAFKA_COMPRESSION_TYPE: 'gzip'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_JMX_PORT: '9091'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.auth.SimpleAclAuthorizer'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    depends_on:
    - zookeeper
    
  kafkahq:
    restart: always
    image: tchiotludo/akhq
    container_name: "kafkahq"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"

    ports:
      - 18080:8080
    links:
      - kafka

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
    - MONGO_INITDB_DATABASE=stage2
    - MONGO_DATA_DIR=/data/db
    - MONGO_LOG_DIR=/dev/null
    ports:
    - 27017:27017